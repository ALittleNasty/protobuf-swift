// Generated by the Protocol Buffers 3.0 compiler.  DO NOT EDIT!
// Source file "empty.proto"
// Syntax "Proto3"

import Foundation

public extension Google.Protobuf{}

public extension Google.Protobuf {
  public struct EmptyRoot {
    public static let `default` = EmptyRoot()
    public var extensionRegistry:ExtensionRegistry

    init() {
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(registry: extensionRegistry)
      Google.Protobuf.SwiftDescriptorRoot.default.registerAllExtensions(registry: extensionRegistry)
    }
    public func registerAllExtensions(registry: ExtensionRegistry) {
    }
  }

  // A generic empty message that you can re-use to avoid defining duplicated
  // empty messages in your APIs. A typical example is to use it as the request
  // or the response type of an API method. For instance:
  //     service Foo {
  //       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
  //     }
  final public class Empty  {
    public var unknownFields = UnknownFieldSet(fields: [:])
    fileprivate var memoizedSerializedSize:Int32 = -1

    public static func == (lhs: Google.Protobuf.Empty, rhs: Google.Protobuf.Empty) -> Bool {
      if (lhs === rhs) {
        return true
      }
      var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
      fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
      return fieldCheck
    }

    required public init() {
    }
    public func isInitialized() -> Bool {
     return true
    }
    public func writeTo(codedOutputStream: CodedOutputStream) throws {
      try unknownFields.writeTo(codedOutputStream: codedOutputStream)
    }
    public func serializedSize() throws -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public func toBuilder() throws -> Google.Protobuf.Empty.Builder {
      return try Google.Protobuf.Empty.builderWithPrototype(prototype:self)
    }
    public class func builderWithPrototype(prototype:Google.Protobuf.Empty) throws -> Google.Protobuf.Empty.Builder {
      return try Google.Protobuf.Empty.Builder().mergeFrom(other:prototype)
    }
    public func encode() throws -> Dictionary<String,Any> {
      guard isInitialized() else {
        throw ProtocolBuffersError.invalidProtocolBuffer("Uninitialized Message")
      }

      let jsonMap:Dictionary<String,Any> = Dictionary<String,Any>()
      return jsonMap
    }
    class public func decode(jsonMap:Dictionary<String,Any>) throws -> Google.Protobuf.Empty {
      return try Google.Protobuf.Empty.Builder.decodeToBuilder(jsonMap:jsonMap).build()
    }
    class public func fromJSON(data:Data) throws -> Google.Protobuf.Empty {
      return try Google.Protobuf.Empty.Builder.fromJSONToBuilder(data:data).build()
    }
    public func getDescription(indent:String) throws -> String {
      var output = ""
      output += unknownFields.getDescription(indent: indent)
      return output
    }
    public var hashValue:Int {
        get {
            var hashCode:Int = 7
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    public class func className() -> String {
        return "Google.Protobuf.Empty"
    }
    public func className() -> String {
        return "Google.Protobuf.Empty"
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilderProtocol {
      public typealias GeneratedMessageType = Google.Protobuf.Empty
      fileprivate var builderResult:Google.Protobuf.Empty = Google.Protobuf.Empty()
      public func getMessage() -> Google.Protobuf.Empty {
          return builderResult
      }

      required public init () {
      }
      public var internalGetResult:Google.Protobuf.Empty {
           get {
              return builderResult
           }
          set{}
      }
      @discardableResult
      public func clear() -> Google.Protobuf.Empty.Builder {
        builderResult = Google.Protobuf.Empty()
        return self
      }
      public func clone() throws -> Google.Protobuf.Empty.Builder {
        return try Google.Protobuf.Empty.builderWithPrototype(prototype:builderResult)
      }
      public func build() throws -> Google.Protobuf.Empty {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Google.Protobuf.Empty {
        let returnMe:Google.Protobuf.Empty = builderResult
        return returnMe
      }
      @discardableResult
      public func mergeFrom(other:Google.Protobuf.Empty) throws -> Google.Protobuf.Empty.Builder {
        if other == Google.Protobuf.Empty() {
         return self
        }
        try merge(unknownField: other.unknownFields)
        return self
      }
      @discardableResult
      public func mergeFrom(codedInputStream: CodedInputStream) throws -> Google.Protobuf.Empty.Builder {
           return try mergeFrom(codedInputStream: codedInputStream, extensionRegistry:ExtensionRegistry())
      }
      @discardableResult
      public func mergeFrom(codedInputStream: CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Empty.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(copyFrom:self.unknownFields)
        while (true) {
          let protobufTag = try codedInputStream.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          default:
            if (!(try parse(codedInputStream:codedInputStream, unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
      class public func decodeToBuilder(jsonMap:Dictionary<String,Any>) throws -> Google.Protobuf.Empty.Builder {
        let resultDecodedBuilder = Google.Protobuf.Empty.Builder()
        return resultDecodedBuilder
      }
      class public func fromJSONToBuilder(data:Data) throws -> Google.Protobuf.Empty.Builder {
        let jsonData = try JSONSerialization.jsonObject(with:data, options: JSONSerialization.ReadingOptions(rawValue: 0))
        guard let jsDataCast = jsonData as? Dictionary<String,Any> else {
          throw ProtocolBuffersError.invalidProtocolBuffer("Invalid JSON data")
        }
        return try Google.Protobuf.Empty.Builder.decodeToBuilder(jsonMap:jsDataCast)
      }
    }

  }

}
extension Google.Protobuf.Empty: GeneratedMessageProtocol {
  public static func getBuilder() -> GeneratedMessageBuilderProtocol {
    return Google.Protobuf.Empty.Builder() as! T
  }
  public func getBuilder() -> GeneratedMessageBuilderProtocol {
    return getBuilder()
  }
  public class func parseArrayDelimitedFrom(inputStream: InputStream) throws -> Array<Google.Protobuf.Empty> {
    var mergedArray = Array<Google.Protobuf.Empty>()
    while let value = try parseDelimitedFrom(inputStream: inputStream) {
      mergedArray.append(value)
    }
    return mergedArray
  }
  public class func parseDelimitedFrom(inputStream: InputStream) throws -> Google.Protobuf.Empty? {
    return try Google.Protobuf.Empty.Builder().mergeDelimitedFrom(inputStream: inputStream)?.build()
  }
  public class func parseFrom(data: Data) throws -> Google.Protobuf.Empty {
    return try Google.Protobuf.Empty.Builder().mergeFrom(data: data, extensionRegistry:Google.Protobuf.EmptyRoot.default.extensionRegistry).build()
  }
  public class func parseFrom(data: Data, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Empty {
    return try Google.Protobuf.Empty.Builder().mergeFrom(data: data, extensionRegistry:extensionRegistry).build()
  }
  public class func parseFrom(inputStream: InputStream) throws -> Google.Protobuf.Empty {
    return try Google.Protobuf.Empty.Builder().mergeFrom(inputStream: inputStream).build()
  }
  public class func parseFrom(inputStream: InputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Empty {
    return try Google.Protobuf.Empty.Builder().mergeFrom(inputStream: inputStream, extensionRegistry:extensionRegistry).build()
  }
  public class func parseFrom(codedInputStream: CodedInputStream) throws -> Google.Protobuf.Empty {
    return try Google.Protobuf.Empty.Builder().mergeFrom(codedInputStream: codedInputStream).build()
  }
  public class func parseFrom(codedInputStream: CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Empty {
    return try Google.Protobuf.Empty.Builder().mergeFrom(codedInputStream: codedInputStream, extensionRegistry:extensionRegistry).build()
  }
}

// @@protoc_insertion_point(global_scope)
