// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Source file unittest_well_known_types.proto

import Foundation
import ProtocolBuffers


internal extension ProtobufUnittest{}

internal func == (lhs: ProtobufUnittest.TestWellKnownTypes, rhs: ProtobufUnittest.TestWellKnownTypes) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasAnyField == rhs.hasAnyField) && (!lhs.hasAnyField || lhs.anyField == rhs.anyField)
  fieldCheck = fieldCheck && (lhs.hasApiField == rhs.hasApiField) && (!lhs.hasApiField || lhs.apiField == rhs.apiField)
  fieldCheck = fieldCheck && (lhs.hasDurationField == rhs.hasDurationField) && (!lhs.hasDurationField || lhs.durationField == rhs.durationField)
  fieldCheck = fieldCheck && (lhs.hasEmptyField == rhs.hasEmptyField) && (!lhs.hasEmptyField || lhs.emptyField == rhs.emptyField)
  fieldCheck = fieldCheck && (lhs.hasFieldMaskField == rhs.hasFieldMaskField) && (!lhs.hasFieldMaskField || lhs.fieldMaskField == rhs.fieldMaskField)
  fieldCheck = fieldCheck && (lhs.hasSourceContextField == rhs.hasSourceContextField) && (!lhs.hasSourceContextField || lhs.sourceContextField == rhs.sourceContextField)
  fieldCheck = fieldCheck && (lhs.hasStructField == rhs.hasStructField) && (!lhs.hasStructField || lhs.structField == rhs.structField)
  fieldCheck = fieldCheck && (lhs.hasTimestampField == rhs.hasTimestampField) && (!lhs.hasTimestampField || lhs.timestampField == rhs.timestampField)
  fieldCheck = fieldCheck && (lhs.hasTypeField == rhs.hasTypeField) && (!lhs.hasTypeField || lhs.typeField == rhs.typeField)
  fieldCheck = fieldCheck && (lhs.hasInt32Field == rhs.hasInt32Field) && (!lhs.hasInt32Field || lhs.int32Field == rhs.int32Field)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

internal extension ProtobufUnittest {
  internal struct UnittestWellKnownTypesRoot {
    internal static var sharedInstance : UnittestWellKnownTypesRoot {
     struct Static {
         static let instance : UnittestWellKnownTypesRoot = UnittestWellKnownTypesRoot()
     }
     return Static.instance
    }
    internal var extensionRegistry:ExtensionRegistry

    init() {
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
      Google.Protobuf.AnyRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Google.Protobuf.ApiRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Google.Protobuf.DurationRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Google.Protobuf.EmptyRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Google.Protobuf.FieldMaskRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Google.Protobuf.SourceContextRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Google.Protobuf.StructRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Google.Protobuf.TimestampRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Google.Protobuf.TypesRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Google.Protobuf.WrappersRoot.sharedInstance.registerAllExtensions(extensionRegistry)
    }
    internal func registerAllExtensions(registry:ExtensionRegistry) {
    }
  }

  final internal class TestWellKnownTypes : GeneratedMessage, GeneratedMessageProtocol {
    private(set) var hasAnyField:Bool = false
    private(set) var anyField:Google.Protobuf.Any!
    private(set) var hasApiField:Bool = false
    private(set) var apiField:Google.Protobuf.Api!
    private(set) var hasDurationField:Bool = false
    private(set) var durationField:Google.Protobuf.Duration!
    private(set) var hasEmptyField:Bool = false
    private(set) var emptyField:Google.Protobuf.Empty!
    private(set) var hasFieldMaskField:Bool = false
    private(set) var fieldMaskField:Google.Protobuf.FieldMask!
    private(set) var hasSourceContextField:Bool = false
    private(set) var sourceContextField:Google.Protobuf.SourceContext!
    private(set) var hasStructField:Bool = false
    private(set) var structField:Google.Protobuf.Struct!
    private(set) var hasTimestampField:Bool = false
    private(set) var timestampField:Google.Protobuf.Timestamp!
    private(set) var hasTypeField:Bool = false
    private(set) var typeField:Google.Protobuf.Types!
    private(set) var hasInt32Field:Bool = false
    private(set) var int32Field:Google.Protobuf.Int32Value!
    required internal init() {
         super.init()
    }
    override internal func isInitialized() -> Bool {
     return true
    }
    override internal func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasAnyField {
        try output.writeMessage(1, value:anyField)
      }
      if hasApiField {
        try output.writeMessage(2, value:apiField)
      }
      if hasDurationField {
        try output.writeMessage(3, value:durationField)
      }
      if hasEmptyField {
        try output.writeMessage(4, value:emptyField)
      }
      if hasFieldMaskField {
        try output.writeMessage(5, value:fieldMaskField)
      }
      if hasSourceContextField {
        try output.writeMessage(6, value:sourceContextField)
      }
      if hasStructField {
        try output.writeMessage(7, value:structField)
      }
      if hasTimestampField {
        try output.writeMessage(8, value:timestampField)
      }
      if hasTypeField {
        try output.writeMessage(9, value:typeField)
      }
      if hasInt32Field {
        try output.writeMessage(10, value:int32Field)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override internal func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasAnyField {
          if let varSizeanyField = anyField?.computeMessageSize(1) {
              serialize_size += varSizeanyField
          }
      }
      if hasApiField {
          if let varSizeapiField = apiField?.computeMessageSize(2) {
              serialize_size += varSizeapiField
          }
      }
      if hasDurationField {
          if let varSizedurationField = durationField?.computeMessageSize(3) {
              serialize_size += varSizedurationField
          }
      }
      if hasEmptyField {
          if let varSizeemptyField = emptyField?.computeMessageSize(4) {
              serialize_size += varSizeemptyField
          }
      }
      if hasFieldMaskField {
          if let varSizefieldMaskField = fieldMaskField?.computeMessageSize(5) {
              serialize_size += varSizefieldMaskField
          }
      }
      if hasSourceContextField {
          if let varSizesourceContextField = sourceContextField?.computeMessageSize(6) {
              serialize_size += varSizesourceContextField
          }
      }
      if hasStructField {
          if let varSizestructField = structField?.computeMessageSize(7) {
              serialize_size += varSizestructField
          }
      }
      if hasTimestampField {
          if let varSizetimestampField = timestampField?.computeMessageSize(8) {
              serialize_size += varSizetimestampField
          }
      }
      if hasTypeField {
          if let varSizetypeField = typeField?.computeMessageSize(9) {
              serialize_size += varSizetypeField
          }
      }
      if hasInt32Field {
          if let varSizeint32Field = int32Field?.computeMessageSize(10) {
              serialize_size += varSizeint32Field
          }
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    internal class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<ProtobufUnittest.TestWellKnownTypes> {
      var mergedArray = Array<ProtobufUnittest.TestWellKnownTypes>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    internal class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.TestWellKnownTypes? {
      return try ProtobufUnittest.TestWellKnownTypes.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    internal class func parseFromData(data:NSData) throws -> ProtobufUnittest.TestWellKnownTypes {
      return try ProtobufUnittest.TestWellKnownTypes.Builder().mergeFromData(data, extensionRegistry:ProtobufUnittest.UnittestWellKnownTypesRoot.sharedInstance.extensionRegistry).build()
    }
    internal class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.TestWellKnownTypes {
      return try ProtobufUnittest.TestWellKnownTypes.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromInputStream(input:NSInputStream) throws -> ProtobufUnittest.TestWellKnownTypes {
      return try ProtobufUnittest.TestWellKnownTypes.Builder().mergeFromInputStream(input).build()
    }
    internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.TestWellKnownTypes {
      return try ProtobufUnittest.TestWellKnownTypes.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.TestWellKnownTypes {
      return try ProtobufUnittest.TestWellKnownTypes.Builder().mergeFromCodedInputStream(input).build()
    }
    internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.TestWellKnownTypes {
      return try ProtobufUnittest.TestWellKnownTypes.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    internal class func getBuilder() -> ProtobufUnittest.TestWellKnownTypes.Builder {
      return ProtobufUnittest.TestWellKnownTypes.classBuilder() as! ProtobufUnittest.TestWellKnownTypes.Builder
    }
    internal func getBuilder() -> ProtobufUnittest.TestWellKnownTypes.Builder {
      return classBuilder() as! ProtobufUnittest.TestWellKnownTypes.Builder
    }
    internal override class func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.TestWellKnownTypes.Builder()
    }
    internal override func classBuilder() -> MessageBuilder {
      return ProtobufUnittest.TestWellKnownTypes.Builder()
    }
    internal func toBuilder() throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
      return try ProtobufUnittest.TestWellKnownTypes.builderWithPrototype(self)
    }
    internal class func builderWithPrototype(prototype:ProtobufUnittest.TestWellKnownTypes) throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
      return try ProtobufUnittest.TestWellKnownTypes.Builder().mergeFrom(prototype)
    }
    override internal func writeDescriptionTo(inout output:String, indent:String) throws {
      if hasAnyField {
        output += "\(indent) anyField {\n"
        try anyField?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      if hasApiField {
        output += "\(indent) apiField {\n"
        try apiField?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      if hasDurationField {
        output += "\(indent) durationField {\n"
        try durationField?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      if hasEmptyField {
        output += "\(indent) emptyField {\n"
        try emptyField?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      if hasFieldMaskField {
        output += "\(indent) fieldMaskField {\n"
        try fieldMaskField?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      if hasSourceContextField {
        output += "\(indent) sourceContextField {\n"
        try sourceContextField?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      if hasStructField {
        output += "\(indent) structField {\n"
        try structField?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      if hasTimestampField {
        output += "\(indent) timestampField {\n"
        try timestampField?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      if hasTypeField {
        output += "\(indent) typeField {\n"
        try typeField?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      if hasInt32Field {
        output += "\(indent) int32Field {\n"
        try int32Field?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override internal var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasAnyField {
                if let hashValueanyField = anyField?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValueanyField
                }
            }
            if hasApiField {
                if let hashValueapiField = apiField?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValueapiField
                }
            }
            if hasDurationField {
                if let hashValuedurationField = durationField?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuedurationField
                }
            }
            if hasEmptyField {
                if let hashValueemptyField = emptyField?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValueemptyField
                }
            }
            if hasFieldMaskField {
                if let hashValuefieldMaskField = fieldMaskField?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuefieldMaskField
                }
            }
            if hasSourceContextField {
                if let hashValuesourceContextField = sourceContextField?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuesourceContextField
                }
            }
            if hasStructField {
                if let hashValuestructField = structField?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuestructField
                }
            }
            if hasTimestampField {
                if let hashValuetimestampField = timestampField?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuetimestampField
                }
            }
            if hasTypeField {
                if let hashValuetypeField = typeField?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuetypeField
                }
            }
            if hasInt32Field {
                if let hashValueint32Field = int32Field?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValueint32Field
                }
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override internal class func className() -> String {
        return "ProtobufUnittest.TestWellKnownTypes"
    }
    override internal func className() -> String {
        return "ProtobufUnittest.TestWellKnownTypes"
    }
    override internal func classMetaType() -> GeneratedMessage.Type {
        return ProtobufUnittest.TestWellKnownTypes.self
    }
    //Meta information declaration end

    final internal class Builder : GeneratedMessageBuilder {
      private var builderResult:ProtobufUnittest.TestWellKnownTypes = ProtobufUnittest.TestWellKnownTypes()
      internal func getMessage() -> ProtobufUnittest.TestWellKnownTypes {
          return builderResult
      }

      required override internal init () {
         super.init()
      }
      var hasAnyField:Bool {
           get {
               return builderResult.hasAnyField
           }
      }
      var anyField:Google.Protobuf.Any! {
           get {
               if anyFieldBuilder_ != nil {
                  builderResult.anyField = anyFieldBuilder_.getMessage()
               }
               return builderResult.anyField
           }
           set (value) {
               builderResult.hasAnyField = true
               builderResult.anyField = value
           }
      }
      private var anyFieldBuilder_:Google.Protobuf.Any.Builder! {
           didSet {
              builderResult.hasAnyField = true
           }
      }
      internal func getAnyFieldBuilder() -> Google.Protobuf.Any.Builder {
        if anyFieldBuilder_ == nil {
           anyFieldBuilder_ = Google.Protobuf.Any.Builder()
           builderResult.anyField = anyFieldBuilder_.getMessage()
           if anyField != nil {
              try! anyFieldBuilder_.mergeFrom(anyField)
           }
        }
        return anyFieldBuilder_
      }
      func setAnyField(value:Google.Protobuf.Any!) -> ProtobufUnittest.TestWellKnownTypes.Builder {
        self.anyField = value
        return self
      }
      internal func mergeAnyField(value:Google.Protobuf.Any) throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
        if builderResult.hasAnyField {
          builderResult.anyField = try Google.Protobuf.Any.builderWithPrototype(builderResult.anyField).mergeFrom(value).buildPartial()
        } else {
          builderResult.anyField = value
        }
        builderResult.hasAnyField = true
        return self
      }
      internal func clearAnyField() -> ProtobufUnittest.TestWellKnownTypes.Builder {
        anyFieldBuilder_ = nil
        builderResult.hasAnyField = false
        builderResult.anyField = nil
        return self
      }
      var hasApiField:Bool {
           get {
               return builderResult.hasApiField
           }
      }
      var apiField:Google.Protobuf.Api! {
           get {
               if apiFieldBuilder_ != nil {
                  builderResult.apiField = apiFieldBuilder_.getMessage()
               }
               return builderResult.apiField
           }
           set (value) {
               builderResult.hasApiField = true
               builderResult.apiField = value
           }
      }
      private var apiFieldBuilder_:Google.Protobuf.Api.Builder! {
           didSet {
              builderResult.hasApiField = true
           }
      }
      internal func getApiFieldBuilder() -> Google.Protobuf.Api.Builder {
        if apiFieldBuilder_ == nil {
           apiFieldBuilder_ = Google.Protobuf.Api.Builder()
           builderResult.apiField = apiFieldBuilder_.getMessage()
           if apiField != nil {
              try! apiFieldBuilder_.mergeFrom(apiField)
           }
        }
        return apiFieldBuilder_
      }
      func setApiField(value:Google.Protobuf.Api!) -> ProtobufUnittest.TestWellKnownTypes.Builder {
        self.apiField = value
        return self
      }
      internal func mergeApiField(value:Google.Protobuf.Api) throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
        if builderResult.hasApiField {
          builderResult.apiField = try Google.Protobuf.Api.builderWithPrototype(builderResult.apiField).mergeFrom(value).buildPartial()
        } else {
          builderResult.apiField = value
        }
        builderResult.hasApiField = true
        return self
      }
      internal func clearApiField() -> ProtobufUnittest.TestWellKnownTypes.Builder {
        apiFieldBuilder_ = nil
        builderResult.hasApiField = false
        builderResult.apiField = nil
        return self
      }
      var hasDurationField:Bool {
           get {
               return builderResult.hasDurationField
           }
      }
      var durationField:Google.Protobuf.Duration! {
           get {
               if durationFieldBuilder_ != nil {
                  builderResult.durationField = durationFieldBuilder_.getMessage()
               }
               return builderResult.durationField
           }
           set (value) {
               builderResult.hasDurationField = true
               builderResult.durationField = value
           }
      }
      private var durationFieldBuilder_:Google.Protobuf.Duration.Builder! {
           didSet {
              builderResult.hasDurationField = true
           }
      }
      internal func getDurationFieldBuilder() -> Google.Protobuf.Duration.Builder {
        if durationFieldBuilder_ == nil {
           durationFieldBuilder_ = Google.Protobuf.Duration.Builder()
           builderResult.durationField = durationFieldBuilder_.getMessage()
           if durationField != nil {
              try! durationFieldBuilder_.mergeFrom(durationField)
           }
        }
        return durationFieldBuilder_
      }
      func setDurationField(value:Google.Protobuf.Duration!) -> ProtobufUnittest.TestWellKnownTypes.Builder {
        self.durationField = value
        return self
      }
      internal func mergeDurationField(value:Google.Protobuf.Duration) throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
        if builderResult.hasDurationField {
          builderResult.durationField = try Google.Protobuf.Duration.builderWithPrototype(builderResult.durationField).mergeFrom(value).buildPartial()
        } else {
          builderResult.durationField = value
        }
        builderResult.hasDurationField = true
        return self
      }
      internal func clearDurationField() -> ProtobufUnittest.TestWellKnownTypes.Builder {
        durationFieldBuilder_ = nil
        builderResult.hasDurationField = false
        builderResult.durationField = nil
        return self
      }
      var hasEmptyField:Bool {
           get {
               return builderResult.hasEmptyField
           }
      }
      var emptyField:Google.Protobuf.Empty! {
           get {
               if emptyFieldBuilder_ != nil {
                  builderResult.emptyField = emptyFieldBuilder_.getMessage()
               }
               return builderResult.emptyField
           }
           set (value) {
               builderResult.hasEmptyField = true
               builderResult.emptyField = value
           }
      }
      private var emptyFieldBuilder_:Google.Protobuf.Empty.Builder! {
           didSet {
              builderResult.hasEmptyField = true
           }
      }
      internal func getEmptyFieldBuilder() -> Google.Protobuf.Empty.Builder {
        if emptyFieldBuilder_ == nil {
           emptyFieldBuilder_ = Google.Protobuf.Empty.Builder()
           builderResult.emptyField = emptyFieldBuilder_.getMessage()
           if emptyField != nil {
              try! emptyFieldBuilder_.mergeFrom(emptyField)
           }
        }
        return emptyFieldBuilder_
      }
      func setEmptyField(value:Google.Protobuf.Empty!) -> ProtobufUnittest.TestWellKnownTypes.Builder {
        self.emptyField = value
        return self
      }
      internal func mergeEmptyField(value:Google.Protobuf.Empty) throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
        if builderResult.hasEmptyField {
          builderResult.emptyField = try Google.Protobuf.Empty.builderWithPrototype(builderResult.emptyField).mergeFrom(value).buildPartial()
        } else {
          builderResult.emptyField = value
        }
        builderResult.hasEmptyField = true
        return self
      }
      internal func clearEmptyField() -> ProtobufUnittest.TestWellKnownTypes.Builder {
        emptyFieldBuilder_ = nil
        builderResult.hasEmptyField = false
        builderResult.emptyField = nil
        return self
      }
      var hasFieldMaskField:Bool {
           get {
               return builderResult.hasFieldMaskField
           }
      }
      var fieldMaskField:Google.Protobuf.FieldMask! {
           get {
               if fieldMaskFieldBuilder_ != nil {
                  builderResult.fieldMaskField = fieldMaskFieldBuilder_.getMessage()
               }
               return builderResult.fieldMaskField
           }
           set (value) {
               builderResult.hasFieldMaskField = true
               builderResult.fieldMaskField = value
           }
      }
      private var fieldMaskFieldBuilder_:Google.Protobuf.FieldMask.Builder! {
           didSet {
              builderResult.hasFieldMaskField = true
           }
      }
      internal func getFieldMaskFieldBuilder() -> Google.Protobuf.FieldMask.Builder {
        if fieldMaskFieldBuilder_ == nil {
           fieldMaskFieldBuilder_ = Google.Protobuf.FieldMask.Builder()
           builderResult.fieldMaskField = fieldMaskFieldBuilder_.getMessage()
           if fieldMaskField != nil {
              try! fieldMaskFieldBuilder_.mergeFrom(fieldMaskField)
           }
        }
        return fieldMaskFieldBuilder_
      }
      func setFieldMaskField(value:Google.Protobuf.FieldMask!) -> ProtobufUnittest.TestWellKnownTypes.Builder {
        self.fieldMaskField = value
        return self
      }
      internal func mergeFieldMaskField(value:Google.Protobuf.FieldMask) throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
        if builderResult.hasFieldMaskField {
          builderResult.fieldMaskField = try Google.Protobuf.FieldMask.builderWithPrototype(builderResult.fieldMaskField).mergeFrom(value).buildPartial()
        } else {
          builderResult.fieldMaskField = value
        }
        builderResult.hasFieldMaskField = true
        return self
      }
      internal func clearFieldMaskField() -> ProtobufUnittest.TestWellKnownTypes.Builder {
        fieldMaskFieldBuilder_ = nil
        builderResult.hasFieldMaskField = false
        builderResult.fieldMaskField = nil
        return self
      }
      var hasSourceContextField:Bool {
           get {
               return builderResult.hasSourceContextField
           }
      }
      var sourceContextField:Google.Protobuf.SourceContext! {
           get {
               if sourceContextFieldBuilder_ != nil {
                  builderResult.sourceContextField = sourceContextFieldBuilder_.getMessage()
               }
               return builderResult.sourceContextField
           }
           set (value) {
               builderResult.hasSourceContextField = true
               builderResult.sourceContextField = value
           }
      }
      private var sourceContextFieldBuilder_:Google.Protobuf.SourceContext.Builder! {
           didSet {
              builderResult.hasSourceContextField = true
           }
      }
      internal func getSourceContextFieldBuilder() -> Google.Protobuf.SourceContext.Builder {
        if sourceContextFieldBuilder_ == nil {
           sourceContextFieldBuilder_ = Google.Protobuf.SourceContext.Builder()
           builderResult.sourceContextField = sourceContextFieldBuilder_.getMessage()
           if sourceContextField != nil {
              try! sourceContextFieldBuilder_.mergeFrom(sourceContextField)
           }
        }
        return sourceContextFieldBuilder_
      }
      func setSourceContextField(value:Google.Protobuf.SourceContext!) -> ProtobufUnittest.TestWellKnownTypes.Builder {
        self.sourceContextField = value
        return self
      }
      internal func mergeSourceContextField(value:Google.Protobuf.SourceContext) throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
        if builderResult.hasSourceContextField {
          builderResult.sourceContextField = try Google.Protobuf.SourceContext.builderWithPrototype(builderResult.sourceContextField).mergeFrom(value).buildPartial()
        } else {
          builderResult.sourceContextField = value
        }
        builderResult.hasSourceContextField = true
        return self
      }
      internal func clearSourceContextField() -> ProtobufUnittest.TestWellKnownTypes.Builder {
        sourceContextFieldBuilder_ = nil
        builderResult.hasSourceContextField = false
        builderResult.sourceContextField = nil
        return self
      }
      var hasStructField:Bool {
           get {
               return builderResult.hasStructField
           }
      }
      var structField:Google.Protobuf.Struct! {
           get {
               if structFieldBuilder_ != nil {
                  builderResult.structField = structFieldBuilder_.getMessage()
               }
               return builderResult.structField
           }
           set (value) {
               builderResult.hasStructField = true
               builderResult.structField = value
           }
      }
      private var structFieldBuilder_:Google.Protobuf.Struct.Builder! {
           didSet {
              builderResult.hasStructField = true
           }
      }
      internal func getStructFieldBuilder() -> Google.Protobuf.Struct.Builder {
        if structFieldBuilder_ == nil {
           structFieldBuilder_ = Google.Protobuf.Struct.Builder()
           builderResult.structField = structFieldBuilder_.getMessage()
           if structField != nil {
              try! structFieldBuilder_.mergeFrom(structField)
           }
        }
        return structFieldBuilder_
      }
      func setStructField(value:Google.Protobuf.Struct!) -> ProtobufUnittest.TestWellKnownTypes.Builder {
        self.structField = value
        return self
      }
      internal func mergeStructField(value:Google.Protobuf.Struct) throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
        if builderResult.hasStructField {
          builderResult.structField = try Google.Protobuf.Struct.builderWithPrototype(builderResult.structField).mergeFrom(value).buildPartial()
        } else {
          builderResult.structField = value
        }
        builderResult.hasStructField = true
        return self
      }
      internal func clearStructField() -> ProtobufUnittest.TestWellKnownTypes.Builder {
        structFieldBuilder_ = nil
        builderResult.hasStructField = false
        builderResult.structField = nil
        return self
      }
      var hasTimestampField:Bool {
           get {
               return builderResult.hasTimestampField
           }
      }
      var timestampField:Google.Protobuf.Timestamp! {
           get {
               if timestampFieldBuilder_ != nil {
                  builderResult.timestampField = timestampFieldBuilder_.getMessage()
               }
               return builderResult.timestampField
           }
           set (value) {
               builderResult.hasTimestampField = true
               builderResult.timestampField = value
           }
      }
      private var timestampFieldBuilder_:Google.Protobuf.Timestamp.Builder! {
           didSet {
              builderResult.hasTimestampField = true
           }
      }
      internal func getTimestampFieldBuilder() -> Google.Protobuf.Timestamp.Builder {
        if timestampFieldBuilder_ == nil {
           timestampFieldBuilder_ = Google.Protobuf.Timestamp.Builder()
           builderResult.timestampField = timestampFieldBuilder_.getMessage()
           if timestampField != nil {
              try! timestampFieldBuilder_.mergeFrom(timestampField)
           }
        }
        return timestampFieldBuilder_
      }
      func setTimestampField(value:Google.Protobuf.Timestamp!) -> ProtobufUnittest.TestWellKnownTypes.Builder {
        self.timestampField = value
        return self
      }
      internal func mergeTimestampField(value:Google.Protobuf.Timestamp) throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
        if builderResult.hasTimestampField {
          builderResult.timestampField = try Google.Protobuf.Timestamp.builderWithPrototype(builderResult.timestampField).mergeFrom(value).buildPartial()
        } else {
          builderResult.timestampField = value
        }
        builderResult.hasTimestampField = true
        return self
      }
      internal func clearTimestampField() -> ProtobufUnittest.TestWellKnownTypes.Builder {
        timestampFieldBuilder_ = nil
        builderResult.hasTimestampField = false
        builderResult.timestampField = nil
        return self
      }
      var hasTypeField:Bool {
           get {
               return builderResult.hasTypeField
           }
      }
      var typeField:Google.Protobuf.Types! {
           get {
               if typeFieldBuilder_ != nil {
                  builderResult.typeField = typeFieldBuilder_.getMessage()
               }
               return builderResult.typeField
           }
           set (value) {
               builderResult.hasTypeField = true
               builderResult.typeField = value
           }
      }
      private var typeFieldBuilder_:Google.Protobuf.Types.Builder! {
           didSet {
              builderResult.hasTypeField = true
           }
      }
      internal func getTypeFieldBuilder() -> Google.Protobuf.Types.Builder {
        if typeFieldBuilder_ == nil {
           typeFieldBuilder_ = Google.Protobuf.Types.Builder()
           builderResult.typeField = typeFieldBuilder_.getMessage()
           if typeField != nil {
              try! typeFieldBuilder_.mergeFrom(typeField)
           }
        }
        return typeFieldBuilder_
      }
      func setTypeField(value:Google.Protobuf.Types!) -> ProtobufUnittest.TestWellKnownTypes.Builder {
        self.typeField = value
        return self
      }
      internal func mergeTypeField(value:Google.Protobuf.Types) throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
        if builderResult.hasTypeField {
          builderResult.typeField = try Google.Protobuf.Types.builderWithPrototype(builderResult.typeField).mergeFrom(value).buildPartial()
        } else {
          builderResult.typeField = value
        }
        builderResult.hasTypeField = true
        return self
      }
      internal func clearTypeField() -> ProtobufUnittest.TestWellKnownTypes.Builder {
        typeFieldBuilder_ = nil
        builderResult.hasTypeField = false
        builderResult.typeField = nil
        return self
      }
      var hasInt32Field:Bool {
           get {
               return builderResult.hasInt32Field
           }
      }
      var int32Field:Google.Protobuf.Int32Value! {
           get {
               if int32FieldBuilder_ != nil {
                  builderResult.int32Field = int32FieldBuilder_.getMessage()
               }
               return builderResult.int32Field
           }
           set (value) {
               builderResult.hasInt32Field = true
               builderResult.int32Field = value
           }
      }
      private var int32FieldBuilder_:Google.Protobuf.Int32Value.Builder! {
           didSet {
              builderResult.hasInt32Field = true
           }
      }
      internal func getInt32FieldBuilder() -> Google.Protobuf.Int32Value.Builder {
        if int32FieldBuilder_ == nil {
           int32FieldBuilder_ = Google.Protobuf.Int32Value.Builder()
           builderResult.int32Field = int32FieldBuilder_.getMessage()
           if int32Field != nil {
              try! int32FieldBuilder_.mergeFrom(int32Field)
           }
        }
        return int32FieldBuilder_
      }
      func setInt32Field(value:Google.Protobuf.Int32Value!) -> ProtobufUnittest.TestWellKnownTypes.Builder {
        self.int32Field = value
        return self
      }
      internal func mergeInt32Field(value:Google.Protobuf.Int32Value) throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
        if builderResult.hasInt32Field {
          builderResult.int32Field = try Google.Protobuf.Int32Value.builderWithPrototype(builderResult.int32Field).mergeFrom(value).buildPartial()
        } else {
          builderResult.int32Field = value
        }
        builderResult.hasInt32Field = true
        return self
      }
      internal func clearInt32Field() -> ProtobufUnittest.TestWellKnownTypes.Builder {
        int32FieldBuilder_ = nil
        builderResult.hasInt32Field = false
        builderResult.int32Field = nil
        return self
      }
      override internal var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      internal override func clear() -> ProtobufUnittest.TestWellKnownTypes.Builder {
        builderResult = ProtobufUnittest.TestWellKnownTypes()
        return self
      }
      internal override func clone() throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
        return try ProtobufUnittest.TestWellKnownTypes.builderWithPrototype(builderResult)
      }
      internal override func build() throws -> ProtobufUnittest.TestWellKnownTypes {
           try checkInitialized()
           return buildPartial()
      }
      internal func buildPartial() -> ProtobufUnittest.TestWellKnownTypes {
        let returnMe:ProtobufUnittest.TestWellKnownTypes = builderResult
        return returnMe
      }
      internal func mergeFrom(other:ProtobufUnittest.TestWellKnownTypes) throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
        if other == ProtobufUnittest.TestWellKnownTypes() {
         return self
        }
        if (other.hasAnyField) {
            try mergeAnyField(other.anyField)
        }
        if (other.hasApiField) {
            try mergeApiField(other.apiField)
        }
        if (other.hasDurationField) {
            try mergeDurationField(other.durationField)
        }
        if (other.hasEmptyField) {
            try mergeEmptyField(other.emptyField)
        }
        if (other.hasFieldMaskField) {
            try mergeFieldMaskField(other.fieldMaskField)
        }
        if (other.hasSourceContextField) {
            try mergeSourceContextField(other.sourceContextField)
        }
        if (other.hasStructField) {
            try mergeStructField(other.structField)
        }
        if (other.hasTimestampField) {
            try mergeTimestampField(other.timestampField)
        }
        if (other.hasTypeField) {
            try mergeTypeField(other.typeField)
        }
        if (other.hasInt32Field) {
            try mergeInt32Field(other.int32Field)
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream) throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> ProtobufUnittest.TestWellKnownTypes.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10 :
            let subBuilder:Google.Protobuf.Any.Builder = Google.Protobuf.Any.Builder()
            if hasAnyField {
              try subBuilder.mergeFrom(anyField)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            anyField = subBuilder.buildPartial()

          case 18 :
            let subBuilder:Google.Protobuf.Api.Builder = Google.Protobuf.Api.Builder()
            if hasApiField {
              try subBuilder.mergeFrom(apiField)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            apiField = subBuilder.buildPartial()

          case 26 :
            let subBuilder:Google.Protobuf.Duration.Builder = Google.Protobuf.Duration.Builder()
            if hasDurationField {
              try subBuilder.mergeFrom(durationField)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            durationField = subBuilder.buildPartial()

          case 34 :
            let subBuilder:Google.Protobuf.Empty.Builder = Google.Protobuf.Empty.Builder()
            if hasEmptyField {
              try subBuilder.mergeFrom(emptyField)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            emptyField = subBuilder.buildPartial()

          case 42 :
            let subBuilder:Google.Protobuf.FieldMask.Builder = Google.Protobuf.FieldMask.Builder()
            if hasFieldMaskField {
              try subBuilder.mergeFrom(fieldMaskField)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            fieldMaskField = subBuilder.buildPartial()

          case 50 :
            let subBuilder:Google.Protobuf.SourceContext.Builder = Google.Protobuf.SourceContext.Builder()
            if hasSourceContextField {
              try subBuilder.mergeFrom(sourceContextField)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            sourceContextField = subBuilder.buildPartial()

          case 58 :
            let subBuilder:Google.Protobuf.Struct.Builder = Google.Protobuf.Struct.Builder()
            if hasStructField {
              try subBuilder.mergeFrom(structField)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            structField = subBuilder.buildPartial()

          case 66 :
            let subBuilder:Google.Protobuf.Timestamp.Builder = Google.Protobuf.Timestamp.Builder()
            if hasTimestampField {
              try subBuilder.mergeFrom(timestampField)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            timestampField = subBuilder.buildPartial()

          case 74 :
            let subBuilder:Google.Protobuf.Types.Builder = Google.Protobuf.Types.Builder()
            if hasTypeField {
              try subBuilder.mergeFrom(typeField)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            typeField = subBuilder.buildPartial()

          case 82 :
            let subBuilder:Google.Protobuf.Int32Value.Builder = Google.Protobuf.Int32Value.Builder()
            if hasInt32Field {
              try subBuilder.mergeFrom(int32Field)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            int32Field = subBuilder.buildPartial()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

}

// @@protoc_insertion_point(global_scope)
