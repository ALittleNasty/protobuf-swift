// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Source file any.proto

import Foundation

public extension Google.Protobuf{}

public func == (lhs: Google.Protobuf.Any, rhs: Google.Protobuf.Any) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasTypeUrl == rhs.hasTypeUrl) && (!lhs.hasTypeUrl || lhs.typeUrl == rhs.typeUrl)
  fieldCheck = fieldCheck && (lhs.hasValue == rhs.hasValue) && (!lhs.hasValue || lhs.value == rhs.value)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public extension Google.Protobuf {
  public struct AnyRoot {
    public static var sharedInstance : AnyRoot {
     struct Static {
         static let instance : AnyRoot = AnyRoot()
     }
     return Static.instance
    }
    public var extensionRegistry:ExtensionRegistry

    init() {
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
      Google.Protobuf.SwiftDescriptorRoot.sharedInstance.registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(registry:ExtensionRegistry) {
    }
  }

  final public class Any : GeneratedMessage, GeneratedMessageProtocol {
    public private(set) var hasTypeUrl:Bool = false
    public private(set) var typeUrl:String = ""

    public private(set) var hasValue:Bool = false
    public private(set) var value:NSData = NSData()

    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasTypeUrl {
        try output.writeString(1, value:typeUrl)
      }
      if hasValue {
        try output.writeData(2, value:value)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasTypeUrl {
        serialize_size += typeUrl.computeStringSize(1)
      }
      if hasValue {
        serialize_size += value.computeDataSize(2)
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Google.Protobuf.Any> {
      var mergedArray = Array<Google.Protobuf.Any>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Google.Protobuf.Any? {
      return try Google.Protobuf.Any.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Google.Protobuf.Any {
      return try Google.Protobuf.Any.Builder().mergeFromData(data, extensionRegistry:Google.Protobuf.AnyRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Any {
      return try Google.Protobuf.Any.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Google.Protobuf.Any {
      return try Google.Protobuf.Any.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Any {
      return try Google.Protobuf.Any.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Google.Protobuf.Any {
      return try Google.Protobuf.Any.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Any {
      return try Google.Protobuf.Any.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Google.Protobuf.Any.Builder {
      return Google.Protobuf.Any.classBuilder() as! Google.Protobuf.Any.Builder
    }
    public func getBuilder() -> Google.Protobuf.Any.Builder {
      return classBuilder() as! Google.Protobuf.Any.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Any.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Any.Builder()
    }
    public func toBuilder() throws -> Google.Protobuf.Any.Builder {
      return try Google.Protobuf.Any.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Google.Protobuf.Any) throws -> Google.Protobuf.Any.Builder {
      return try Google.Protobuf.Any.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      if hasTypeUrl {
        output += "\(indent) typeUrl: \(typeUrl) \n"
      }
      if hasValue {
        output += "\(indent) value: \(value) \n"
      }
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasTypeUrl {
               hashCode = (hashCode &* 31) &+ typeUrl.hashValue
            }
            if hasValue {
               hashCode = (hashCode &* 31) &+ value.hashValue
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Google.Protobuf.Any"
    }
    override public func className() -> String {
        return "Google.Protobuf.Any"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Google.Protobuf.Any.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Google.Protobuf.Any = Google.Protobuf.Any()
      public func getMessage() -> Google.Protobuf.Any {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      public var hasTypeUrl:Bool {
           get {
                return builderResult.hasTypeUrl
           }
      }
      public var typeUrl:String {
           get {
                return builderResult.typeUrl
           }
           set (value) {
               builderResult.hasTypeUrl = true
               builderResult.typeUrl = value
           }
      }
      public func setTypeUrl(value:String) -> Google.Protobuf.Any.Builder {
        self.typeUrl = value
        return self
      }
      public func clearTypeUrl() -> Google.Protobuf.Any.Builder{
           builderResult.hasTypeUrl = false
           builderResult.typeUrl = ""
           return self
      }
      public var hasValue:Bool {
           get {
                return builderResult.hasValue
           }
      }
      public var value:NSData {
           get {
                return builderResult.value
           }
           set (value) {
               builderResult.hasValue = true
               builderResult.value = value
           }
      }
      public func setValue(value:NSData) -> Google.Protobuf.Any.Builder {
        self.value = value
        return self
      }
      public func clearValue() -> Google.Protobuf.Any.Builder{
           builderResult.hasValue = false
           builderResult.value = NSData()
           return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Google.Protobuf.Any.Builder {
        builderResult = Google.Protobuf.Any()
        return self
      }
      public override func clone() throws -> Google.Protobuf.Any.Builder {
        return try Google.Protobuf.Any.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Google.Protobuf.Any {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Google.Protobuf.Any {
        let returnMe:Google.Protobuf.Any = builderResult
        return returnMe
      }
      public func mergeFrom(other:Google.Protobuf.Any) throws -> Google.Protobuf.Any.Builder {
        if other == Google.Protobuf.Any() {
         return self
        }
        if other.hasTypeUrl {
             typeUrl = other.typeUrl
        }
        if other.hasValue {
             value = other.value
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Google.Protobuf.Any.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Any.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10 :
            typeUrl = try input.readString()

          case 18 :
            value = try input.readData()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

}

// @@protoc_insertion_point(global_scope)
