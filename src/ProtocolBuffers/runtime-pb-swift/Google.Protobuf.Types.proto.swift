// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Source file type.proto

import Foundation

public extension Google.Protobuf{}

public func == (lhs: Google.Protobuf.Types, rhs: Google.Protobuf.Types) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasName == rhs.hasName) && (!lhs.hasName || lhs.name == rhs.name)
  fieldCheck = fieldCheck && (lhs.fields == rhs.fields)
  fieldCheck = fieldCheck && (lhs.oneofs == rhs.oneofs)
  fieldCheck = fieldCheck && (lhs.options == rhs.options)
  fieldCheck = fieldCheck && (lhs.hasSourceContext == rhs.hasSourceContext) && (!lhs.hasSourceContext || lhs.sourceContext == rhs.sourceContext)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Google.Protobuf.Field, rhs: Google.Protobuf.Field) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasKind == rhs.hasKind) && (!lhs.hasKind || lhs.kind == rhs.kind)
  fieldCheck = fieldCheck && (lhs.hasCardinality == rhs.hasCardinality) && (!lhs.hasCardinality || lhs.cardinality == rhs.cardinality)
  fieldCheck = fieldCheck && (lhs.hasNumber == rhs.hasNumber) && (!lhs.hasNumber || lhs.number == rhs.number)
  fieldCheck = fieldCheck && (lhs.hasName == rhs.hasName) && (!lhs.hasName || lhs.name == rhs.name)
  fieldCheck = fieldCheck && (lhs.hasTypeUrl == rhs.hasTypeUrl) && (!lhs.hasTypeUrl || lhs.typeUrl == rhs.typeUrl)
  fieldCheck = fieldCheck && (lhs.hasOneofIndex == rhs.hasOneofIndex) && (!lhs.hasOneofIndex || lhs.oneofIndex == rhs.oneofIndex)
  fieldCheck = fieldCheck && (lhs.hasPacked == rhs.hasPacked) && (!lhs.hasPacked || lhs.packed == rhs.packed)
  fieldCheck = fieldCheck && (lhs.options == rhs.options)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Google.Protobuf.Enum, rhs: Google.Protobuf.Enum) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasName == rhs.hasName) && (!lhs.hasName || lhs.name == rhs.name)
  fieldCheck = fieldCheck && (lhs.enumvalue == rhs.enumvalue)
  fieldCheck = fieldCheck && (lhs.options == rhs.options)
  fieldCheck = fieldCheck && (lhs.hasSourceContext == rhs.hasSourceContext) && (!lhs.hasSourceContext || lhs.sourceContext == rhs.sourceContext)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Google.Protobuf.EnumValue, rhs: Google.Protobuf.EnumValue) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasName == rhs.hasName) && (!lhs.hasName || lhs.name == rhs.name)
  fieldCheck = fieldCheck && (lhs.hasNumber == rhs.hasNumber) && (!lhs.hasNumber || lhs.number == rhs.number)
  fieldCheck = fieldCheck && (lhs.options == rhs.options)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Google.Protobuf.Option, rhs: Google.Protobuf.Option) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasName == rhs.hasName) && (!lhs.hasName || lhs.name == rhs.name)
  fieldCheck = fieldCheck && (lhs.hasValue == rhs.hasValue) && (!lhs.hasValue || lhs.value == rhs.value)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public extension Google.Protobuf {
  public struct TypesRoot {
    public static var sharedInstance : TypesRoot {
     struct Static {
         static let instance : TypesRoot = TypesRoot()
     }
     return Static.instance
    }
    public var extensionRegistry:ExtensionRegistry

    init() {
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
      Google.Protobuf.SwiftDescriptorRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Google.Protobuf.AnyRoot.sharedInstance.registerAllExtensions(extensionRegistry)
      Google.Protobuf.SourceContextRoot.sharedInstance.registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(registry:ExtensionRegistry) {
    }
  }

  final public class Types : GeneratedMessage, GeneratedMessageProtocol {
    public private(set) var hasName:Bool = false
    public private(set) var name:String = ""

    public private(set) var fields:Array<Google.Protobuf.Field>  = Array<Google.Protobuf.Field>()
    public private(set) var oneofs:Array<String> = Array<String>()
    public private(set) var options:Array<Google.Protobuf.Option>  = Array<Google.Protobuf.Option>()
    public private(set) var hasSourceContext:Bool = false
    public private(set) var sourceContext:Google.Protobuf.SourceContext!
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasName {
        try output.writeString(1, value:name)
      }
      for oneElementfields in fields {
          try output.writeMessage(2, value:oneElementfields)
      }
      if !oneofs.isEmpty {
        for oneValueoneofs in oneofs {
          try output.writeString(3, value:oneValueoneofs)
        }
      }
      for oneElementoptions in options {
          try output.writeMessage(4, value:oneElementoptions)
      }
      if hasSourceContext {
        try output.writeMessage(5, value:sourceContext)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasName {
        serialize_size += name.computeStringSize(1)
      }
      for oneElementfields in fields {
          serialize_size += oneElementfields.computeMessageSize(2)
      }
      var dataSizeOneofs:Int32 = 0
      for oneValueoneofs in oneofs {
          dataSizeOneofs += oneValueoneofs.computeStringSizeNoTag()
      }
      serialize_size += dataSizeOneofs
      serialize_size += 1 * Int32(oneofs.count)
      for oneElementoptions in options {
          serialize_size += oneElementoptions.computeMessageSize(4)
      }
      if hasSourceContext {
          if let varSizesourceContext = sourceContext?.computeMessageSize(5) {
              serialize_size += varSizesourceContext
          }
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) throws -> Google.Protobuf.Types {
      return try Google.Protobuf.Types.Builder().mergeFromData(data, extensionRegistry:Google.Protobuf.TypesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Types {
      return try Google.Protobuf.Types.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Google.Protobuf.Types {
      return try Google.Protobuf.Types.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Types {
      return try Google.Protobuf.Types.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Google.Protobuf.Types {
      return try Google.Protobuf.Types.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Types {
      return try Google.Protobuf.Types.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Google.Protobuf.Types.Builder {
      return Google.Protobuf.Types.classBuilder() as! Google.Protobuf.Types.Builder
    }
    public func getBuilder() -> Google.Protobuf.Types.Builder {
      return classBuilder() as! Google.Protobuf.Types.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Types.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Types.Builder()
    }
    public func toBuilder() throws -> Google.Protobuf.Types.Builder {
      return try Google.Protobuf.Types.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Google.Protobuf.Types) throws -> Google.Protobuf.Types.Builder {
      return try Google.Protobuf.Types.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      if hasName {
        output += "\(indent) name: \(name) \n"
      }
      var fieldsElementIndex:Int = 0
      for oneElementfields in fields {
          output += "\(indent) fields[\(fieldsElementIndex)] {\n"
          try oneElementfields.writeDescriptionTo(&output, indent:"\(indent)  ")
          output += "\(indent)}\n"
          fieldsElementIndex++
      }
      var oneofsElementIndex:Int = 0
      for oneValueoneofs in oneofs  {
          output += "\(indent) oneofs[\(oneofsElementIndex)]: \(oneValueoneofs)\n"
          oneofsElementIndex++
      }
      var optionsElementIndex:Int = 0
      for oneElementoptions in options {
          output += "\(indent) options[\(optionsElementIndex)] {\n"
          try oneElementoptions.writeDescriptionTo(&output, indent:"\(indent)  ")
          output += "\(indent)}\n"
          optionsElementIndex++
      }
      if hasSourceContext {
        output += "\(indent) sourceContext {\n"
        try sourceContext?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasName {
               hashCode = (hashCode &* 31) &+ name.hashValue
            }
            for oneElementfields in fields {
                hashCode = (hashCode &* 31) &+ oneElementfields.hashValue
            }
            for oneValueoneofs in oneofs {
                hashCode = (hashCode &* 31) &+ oneValueoneofs.hashValue
            }
            for oneElementoptions in options {
                hashCode = (hashCode &* 31) &+ oneElementoptions.hashValue
            }
            if hasSourceContext {
                if let hashValuesourceContext = sourceContext?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuesourceContext
                }
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Google.Protobuf.Types"
    }
    override public func className() -> String {
        return "Google.Protobuf.Types"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Google.Protobuf.Types.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Google.Protobuf.Types = Google.Protobuf.Types()
      public func getMessage() -> Google.Protobuf.Types {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      public var hasName:Bool {
           get {
                return builderResult.hasName
           }
      }
      public var name:String {
           get {
                return builderResult.name
           }
           set (value) {
               builderResult.hasName = true
               builderResult.name = value
           }
      }
      public func setName(value:String) -> Google.Protobuf.Types.Builder {
        self.name = value
        return self
      }
      public func clearName() -> Google.Protobuf.Types.Builder{
           builderResult.hasName = false
           builderResult.name = ""
           return self
      }
      public var fields:Array<Google.Protobuf.Field> {
           get {
               return builderResult.fields
           }
           set (value) {
               builderResult.fields = value
           }
      }
      public func setFields(value:Array<Google.Protobuf.Field>) -> Google.Protobuf.Types.Builder {
        self.fields = value
        return self
      }
      public func clearFields() -> Google.Protobuf.Types.Builder {
        builderResult.fields.removeAll(keepCapacity: false)
        return self
      }
      public var oneofs:Array<String> {
           get {
               return builderResult.oneofs
           }
           set (array) {
               builderResult.oneofs = array
           }
      }
      public func setOneofs(value:Array<String>) -> Google.Protobuf.Types.Builder {
        self.oneofs = value
        return self
      }
      public func clearOneofs() -> Google.Protobuf.Types.Builder {
         builderResult.oneofs.removeAll(keepCapacity: false)
         return self
      }
      public var options:Array<Google.Protobuf.Option> {
           get {
               return builderResult.options
           }
           set (value) {
               builderResult.options = value
           }
      }
      public func setOptions(value:Array<Google.Protobuf.Option>) -> Google.Protobuf.Types.Builder {
        self.options = value
        return self
      }
      public func clearOptions() -> Google.Protobuf.Types.Builder {
        builderResult.options.removeAll(keepCapacity: false)
        return self
      }
      public var hasSourceContext:Bool {
           get {
               return builderResult.hasSourceContext
           }
      }
      public var sourceContext:Google.Protobuf.SourceContext! {
           get {
               if sourceContextBuilder_ != nil {
                  builderResult.sourceContext = sourceContextBuilder_.getMessage()
               }
               return builderResult.sourceContext
           }
           set (value) {
               builderResult.hasSourceContext = true
               builderResult.sourceContext = value
           }
      }
      private var sourceContextBuilder_:Google.Protobuf.SourceContext.Builder! {
           didSet {
              builderResult.hasSourceContext = true
           }
      }
      public func getSourceContextBuilder() -> Google.Protobuf.SourceContext.Builder {
        if sourceContextBuilder_ == nil {
           sourceContextBuilder_ = Google.Protobuf.SourceContext.Builder()
           builderResult.sourceContext = sourceContextBuilder_.getMessage()
           if sourceContext != nil {
              try! sourceContextBuilder_.mergeFrom(sourceContext)
           }
        }
        return sourceContextBuilder_
      }
      public func setSourceContext(value:Google.Protobuf.SourceContext!) -> Google.Protobuf.Types.Builder {
        self.sourceContext = value
        return self
      }
      public func mergeSourceContext(value:Google.Protobuf.SourceContext) throws -> Google.Protobuf.Types.Builder {
        if builderResult.hasSourceContext {
          builderResult.sourceContext = try Google.Protobuf.SourceContext.builderWithPrototype(builderResult.sourceContext).mergeFrom(value).buildPartial()
        } else {
          builderResult.sourceContext = value
        }
        builderResult.hasSourceContext = true
        return self
      }
      public func clearSourceContext() -> Google.Protobuf.Types.Builder {
        sourceContextBuilder_ = nil
        builderResult.hasSourceContext = false
        builderResult.sourceContext = nil
        return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Google.Protobuf.Types.Builder {
        builderResult = Google.Protobuf.Types()
        return self
      }
      public override func clone() throws -> Google.Protobuf.Types.Builder {
        return try Google.Protobuf.Types.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Google.Protobuf.Types {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Google.Protobuf.Types {
        let returnMe:Google.Protobuf.Types = builderResult
        return returnMe
      }
      public func mergeFrom(other:Google.Protobuf.Types) throws -> Google.Protobuf.Types.Builder {
        if other == Google.Protobuf.Types() {
         return self
        }
        if other.hasName {
             name = other.name
        }
        if !other.fields.isEmpty  {
           builderResult.fields += other.fields
        }
        if !other.oneofs.isEmpty {
            builderResult.oneofs += other.oneofs
        }
        if !other.options.isEmpty  {
           builderResult.options += other.options
        }
        if (other.hasSourceContext) {
            try mergeSourceContext(other.sourceContext)
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Google.Protobuf.Types.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Types.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10 :
            name = try input.readString()

          case 18 :
            let subBuilder = Google.Protobuf.Field.Builder()
            try input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
            fields += [subBuilder.buildPartial()]

          case 26 :
            oneofs += [try input.readString()]

          case 34 :
            let subBuilder = Google.Protobuf.Option.Builder()
            try input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
            options += [subBuilder.buildPartial()]

          case 42 :
            let subBuilder:Google.Protobuf.SourceContext.Builder = Google.Protobuf.SourceContext.Builder()
            if hasSourceContext {
              try subBuilder.mergeFrom(sourceContext)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            sourceContext = subBuilder.buildPartial()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Field : GeneratedMessage, GeneratedMessageProtocol {


      //Enum type declaration start 

      public enum Kind:Int32 {
        case TypeUnknown = 0
        case TypeDouble = 1
        case TypeFloat = 2
        case TypeInt64 = 3
        case TypeUint64 = 4
        case TypeInt32 = 5
        case TypeFixed64 = 6
        case TypeFixed32 = 7
        case TypeBool = 8
        case TypeString = 9
        case TypeMessage = 11
        case TypeBytes = 12
        case TypeUint32 = 13
        case TypeEnum = 14
        case TypeSfixed32 = 15
        case TypeSfixed64 = 16
        case TypeSint32 = 17
        case TypeSint64 = 18

      }

      //Enum type declaration end 



      //Enum type declaration start 

      public enum Cardinality:Int32 {
        case CardinalityUnknown = 0
        case CardinalityOptional = 1
        case CardinalityRequired = 2
        case CardinalityRepeated = 3

      }

      //Enum type declaration end 

    public private(set) var kind:Field.Kind = Field.Kind.TypeUnknown
    public private(set) var hasKind:Bool = false
    public private(set) var cardinality:Field.Cardinality = Field.Cardinality.CardinalityUnknown
    public private(set) var hasCardinality:Bool = false
    public private(set) var hasNumber:Bool = false
    public private(set) var number:Int32 = Int32(0)

    public private(set) var hasName:Bool = false
    public private(set) var name:String = ""

    public private(set) var hasTypeUrl:Bool = false
    public private(set) var typeUrl:String = ""

    public private(set) var hasOneofIndex:Bool = false
    public private(set) var oneofIndex:Int32 = Int32(0)

    public private(set) var hasPacked:Bool = false
    public private(set) var packed:Bool = false

    public private(set) var options:Array<Google.Protobuf.Option>  = Array<Google.Protobuf.Option>()
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasKind {
        try output.writeEnum(1, value:kind.rawValue)
      }
      if hasCardinality {
        try output.writeEnum(2, value:cardinality.rawValue)
      }
      if hasNumber {
        try output.writeInt32(3, value:number)
      }
      if hasName {
        try output.writeString(4, value:name)
      }
      if hasTypeUrl {
        try output.writeString(6, value:typeUrl)
      }
      if hasOneofIndex {
        try output.writeInt32(7, value:oneofIndex)
      }
      if hasPacked {
        try output.writeBool(8, value:packed)
      }
      for oneElementoptions in options {
          try output.writeMessage(9, value:oneElementoptions)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if (hasKind) {
        serialize_size += kind.rawValue.computeEnumSize(1)
      }
      if (hasCardinality) {
        serialize_size += cardinality.rawValue.computeEnumSize(2)
      }
      if hasNumber {
        serialize_size += number.computeInt32Size(3)
      }
      if hasName {
        serialize_size += name.computeStringSize(4)
      }
      if hasTypeUrl {
        serialize_size += typeUrl.computeStringSize(6)
      }
      if hasOneofIndex {
        serialize_size += oneofIndex.computeInt32Size(7)
      }
      if hasPacked {
        serialize_size += packed.computeBoolSize(8)
      }
      for oneElementoptions in options {
          serialize_size += oneElementoptions.computeMessageSize(9)
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) throws -> Google.Protobuf.Field {
      return try Google.Protobuf.Field.Builder().mergeFromData(data, extensionRegistry:Google.Protobuf.TypesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Field {
      return try Google.Protobuf.Field.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Google.Protobuf.Field {
      return try Google.Protobuf.Field.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Field {
      return try Google.Protobuf.Field.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Google.Protobuf.Field {
      return try Google.Protobuf.Field.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Field {
      return try Google.Protobuf.Field.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Google.Protobuf.Field.Builder {
      return Google.Protobuf.Field.classBuilder() as! Google.Protobuf.Field.Builder
    }
    public func getBuilder() -> Google.Protobuf.Field.Builder {
      return classBuilder() as! Google.Protobuf.Field.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Field.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Field.Builder()
    }
    public func toBuilder() throws -> Google.Protobuf.Field.Builder {
      return try Google.Protobuf.Field.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Google.Protobuf.Field) throws -> Google.Protobuf.Field.Builder {
      return try Google.Protobuf.Field.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      if (hasKind) {
        output += "\(indent) kind: \(kind.rawValue)\n"
      }
      if (hasCardinality) {
        output += "\(indent) cardinality: \(cardinality.rawValue)\n"
      }
      if hasNumber {
        output += "\(indent) number: \(number) \n"
      }
      if hasName {
        output += "\(indent) name: \(name) \n"
      }
      if hasTypeUrl {
        output += "\(indent) typeUrl: \(typeUrl) \n"
      }
      if hasOneofIndex {
        output += "\(indent) oneofIndex: \(oneofIndex) \n"
      }
      if hasPacked {
        output += "\(indent) packed: \(packed) \n"
      }
      var optionsElementIndex:Int = 0
      for oneElementoptions in options {
          output += "\(indent) options[\(optionsElementIndex)] {\n"
          try oneElementoptions.writeDescriptionTo(&output, indent:"\(indent)  ")
          output += "\(indent)}\n"
          optionsElementIndex++
      }
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasKind {
               hashCode = (hashCode &* 31) &+ Int(kind.rawValue)
            }
            if hasCardinality {
               hashCode = (hashCode &* 31) &+ Int(cardinality.rawValue)
            }
            if hasNumber {
               hashCode = (hashCode &* 31) &+ number.hashValue
            }
            if hasName {
               hashCode = (hashCode &* 31) &+ name.hashValue
            }
            if hasTypeUrl {
               hashCode = (hashCode &* 31) &+ typeUrl.hashValue
            }
            if hasOneofIndex {
               hashCode = (hashCode &* 31) &+ oneofIndex.hashValue
            }
            if hasPacked {
               hashCode = (hashCode &* 31) &+ packed.hashValue
            }
            for oneElementoptions in options {
                hashCode = (hashCode &* 31) &+ oneElementoptions.hashValue
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Google.Protobuf.Field"
    }
    override public func className() -> String {
        return "Google.Protobuf.Field"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Google.Protobuf.Field.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Google.Protobuf.Field = Google.Protobuf.Field()
      public func getMessage() -> Google.Protobuf.Field {
          return builderResult
      }

      required override public init () {
         super.init()
      }
        public var hasKind:Bool{
            get {
                return builderResult.hasKind
            }
        }
        public var kind:Field.Kind {
            get {
                return builderResult.kind
            }
            set (value) {
                builderResult.hasKind = true
                builderResult.kind = value
            }
        }
        public func setKind(value:Field.Kind) -> Google.Protobuf.Field.Builder {
          self.kind = value
          return self
        }
        public func clearKind() -> Google.Protobuf.Field.Builder {
           builderResult.hasKind = false
           builderResult.kind = .TypeUnknown
           return self
        }
        public var hasCardinality:Bool{
            get {
                return builderResult.hasCardinality
            }
        }
        public var cardinality:Field.Cardinality {
            get {
                return builderResult.cardinality
            }
            set (value) {
                builderResult.hasCardinality = true
                builderResult.cardinality = value
            }
        }
        public func setCardinality(value:Field.Cardinality) -> Google.Protobuf.Field.Builder {
          self.cardinality = value
          return self
        }
        public func clearCardinality() -> Google.Protobuf.Field.Builder {
           builderResult.hasCardinality = false
           builderResult.cardinality = .CardinalityUnknown
           return self
        }
      public var hasNumber:Bool {
           get {
                return builderResult.hasNumber
           }
      }
      public var number:Int32 {
           get {
                return builderResult.number
           }
           set (value) {
               builderResult.hasNumber = true
               builderResult.number = value
           }
      }
      public func setNumber(value:Int32) -> Google.Protobuf.Field.Builder {
        self.number = value
        return self
      }
      public func clearNumber() -> Google.Protobuf.Field.Builder{
           builderResult.hasNumber = false
           builderResult.number = Int32(0)
           return self
      }
      public var hasName:Bool {
           get {
                return builderResult.hasName
           }
      }
      public var name:String {
           get {
                return builderResult.name
           }
           set (value) {
               builderResult.hasName = true
               builderResult.name = value
           }
      }
      public func setName(value:String) -> Google.Protobuf.Field.Builder {
        self.name = value
        return self
      }
      public func clearName() -> Google.Protobuf.Field.Builder{
           builderResult.hasName = false
           builderResult.name = ""
           return self
      }
      public var hasTypeUrl:Bool {
           get {
                return builderResult.hasTypeUrl
           }
      }
      public var typeUrl:String {
           get {
                return builderResult.typeUrl
           }
           set (value) {
               builderResult.hasTypeUrl = true
               builderResult.typeUrl = value
           }
      }
      public func setTypeUrl(value:String) -> Google.Protobuf.Field.Builder {
        self.typeUrl = value
        return self
      }
      public func clearTypeUrl() -> Google.Protobuf.Field.Builder{
           builderResult.hasTypeUrl = false
           builderResult.typeUrl = ""
           return self
      }
      public var hasOneofIndex:Bool {
           get {
                return builderResult.hasOneofIndex
           }
      }
      public var oneofIndex:Int32 {
           get {
                return builderResult.oneofIndex
           }
           set (value) {
               builderResult.hasOneofIndex = true
               builderResult.oneofIndex = value
           }
      }
      public func setOneofIndex(value:Int32) -> Google.Protobuf.Field.Builder {
        self.oneofIndex = value
        return self
      }
      public func clearOneofIndex() -> Google.Protobuf.Field.Builder{
           builderResult.hasOneofIndex = false
           builderResult.oneofIndex = Int32(0)
           return self
      }
      public var hasPacked:Bool {
           get {
                return builderResult.hasPacked
           }
      }
      public var packed:Bool {
           get {
                return builderResult.packed
           }
           set (value) {
               builderResult.hasPacked = true
               builderResult.packed = value
           }
      }
      public func setPacked(value:Bool) -> Google.Protobuf.Field.Builder {
        self.packed = value
        return self
      }
      public func clearPacked() -> Google.Protobuf.Field.Builder{
           builderResult.hasPacked = false
           builderResult.packed = false
           return self
      }
      public var options:Array<Google.Protobuf.Option> {
           get {
               return builderResult.options
           }
           set (value) {
               builderResult.options = value
           }
      }
      public func setOptions(value:Array<Google.Protobuf.Option>) -> Google.Protobuf.Field.Builder {
        self.options = value
        return self
      }
      public func clearOptions() -> Google.Protobuf.Field.Builder {
        builderResult.options.removeAll(keepCapacity: false)
        return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Google.Protobuf.Field.Builder {
        builderResult = Google.Protobuf.Field()
        return self
      }
      public override func clone() throws -> Google.Protobuf.Field.Builder {
        return try Google.Protobuf.Field.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Google.Protobuf.Field {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Google.Protobuf.Field {
        let returnMe:Google.Protobuf.Field = builderResult
        return returnMe
      }
      public func mergeFrom(other:Google.Protobuf.Field) throws -> Google.Protobuf.Field.Builder {
        if other == Google.Protobuf.Field() {
         return self
        }
        if other.hasKind {
             kind = other.kind
        }
        if other.hasCardinality {
             cardinality = other.cardinality
        }
        if other.hasNumber {
             number = other.number
        }
        if other.hasName {
             name = other.name
        }
        if other.hasTypeUrl {
             typeUrl = other.typeUrl
        }
        if other.hasOneofIndex {
             oneofIndex = other.oneofIndex
        }
        if other.hasPacked {
             packed = other.packed
        }
        if !other.options.isEmpty  {
           builderResult.options += other.options
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Google.Protobuf.Field.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Field.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 8 :
            let valueIntkind = try input.readEnum()
            if let enumskind = Field.Kind(rawValue:valueIntkind){
                 kind = enumskind
            } else {
                 try unknownFieldsBuilder.mergeVarintField(1, value:Int64(valueIntkind))
            }

          case 16 :
            let valueIntcardinality = try input.readEnum()
            if let enumscardinality = Field.Cardinality(rawValue:valueIntcardinality){
                 cardinality = enumscardinality
            } else {
                 try unknownFieldsBuilder.mergeVarintField(2, value:Int64(valueIntcardinality))
            }

          case 24 :
            number = try input.readInt32()

          case 34 :
            name = try input.readString()

          case 50 :
            typeUrl = try input.readString()

          case 56 :
            oneofIndex = try input.readInt32()

          case 64 :
            packed = try input.readBool()

          case 74 :
            let subBuilder = Google.Protobuf.Option.Builder()
            try input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
            options += [subBuilder.buildPartial()]

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Enum : GeneratedMessage, GeneratedMessageProtocol {
    public private(set) var hasName:Bool = false
    public private(set) var name:String = ""

    public private(set) var enumvalue:Array<Google.Protobuf.EnumValue>  = Array<Google.Protobuf.EnumValue>()
    public private(set) var options:Array<Google.Protobuf.Option>  = Array<Google.Protobuf.Option>()
    public private(set) var hasSourceContext:Bool = false
    public private(set) var sourceContext:Google.Protobuf.SourceContext!
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasName {
        try output.writeString(1, value:name)
      }
      for oneElementenumvalue in enumvalue {
          try output.writeMessage(2, value:oneElementenumvalue)
      }
      for oneElementoptions in options {
          try output.writeMessage(3, value:oneElementoptions)
      }
      if hasSourceContext {
        try output.writeMessage(4, value:sourceContext)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasName {
        serialize_size += name.computeStringSize(1)
      }
      for oneElementenumvalue in enumvalue {
          serialize_size += oneElementenumvalue.computeMessageSize(2)
      }
      for oneElementoptions in options {
          serialize_size += oneElementoptions.computeMessageSize(3)
      }
      if hasSourceContext {
          if let varSizesourceContext = sourceContext?.computeMessageSize(4) {
              serialize_size += varSizesourceContext
          }
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) throws -> Google.Protobuf.Enum {
      return try Google.Protobuf.Enum.Builder().mergeFromData(data, extensionRegistry:Google.Protobuf.TypesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Enum {
      return try Google.Protobuf.Enum.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Google.Protobuf.Enum {
      return try Google.Protobuf.Enum.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Enum {
      return try Google.Protobuf.Enum.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Google.Protobuf.Enum {
      return try Google.Protobuf.Enum.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Enum {
      return try Google.Protobuf.Enum.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Google.Protobuf.Enum.Builder {
      return Google.Protobuf.Enum.classBuilder() as! Google.Protobuf.Enum.Builder
    }
    public func getBuilder() -> Google.Protobuf.Enum.Builder {
      return classBuilder() as! Google.Protobuf.Enum.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Enum.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Enum.Builder()
    }
    public func toBuilder() throws -> Google.Protobuf.Enum.Builder {
      return try Google.Protobuf.Enum.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Google.Protobuf.Enum) throws -> Google.Protobuf.Enum.Builder {
      return try Google.Protobuf.Enum.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      if hasName {
        output += "\(indent) name: \(name) \n"
      }
      var enumvalueElementIndex:Int = 0
      for oneElementenumvalue in enumvalue {
          output += "\(indent) enumvalue[\(enumvalueElementIndex)] {\n"
          try oneElementenumvalue.writeDescriptionTo(&output, indent:"\(indent)  ")
          output += "\(indent)}\n"
          enumvalueElementIndex++
      }
      var optionsElementIndex:Int = 0
      for oneElementoptions in options {
          output += "\(indent) options[\(optionsElementIndex)] {\n"
          try oneElementoptions.writeDescriptionTo(&output, indent:"\(indent)  ")
          output += "\(indent)}\n"
          optionsElementIndex++
      }
      if hasSourceContext {
        output += "\(indent) sourceContext {\n"
        try sourceContext?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasName {
               hashCode = (hashCode &* 31) &+ name.hashValue
            }
            for oneElementenumvalue in enumvalue {
                hashCode = (hashCode &* 31) &+ oneElementenumvalue.hashValue
            }
            for oneElementoptions in options {
                hashCode = (hashCode &* 31) &+ oneElementoptions.hashValue
            }
            if hasSourceContext {
                if let hashValuesourceContext = sourceContext?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuesourceContext
                }
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Google.Protobuf.Enum"
    }
    override public func className() -> String {
        return "Google.Protobuf.Enum"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Google.Protobuf.Enum.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Google.Protobuf.Enum = Google.Protobuf.Enum()
      public func getMessage() -> Google.Protobuf.Enum {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      public var hasName:Bool {
           get {
                return builderResult.hasName
           }
      }
      public var name:String {
           get {
                return builderResult.name
           }
           set (value) {
               builderResult.hasName = true
               builderResult.name = value
           }
      }
      public func setName(value:String) -> Google.Protobuf.Enum.Builder {
        self.name = value
        return self
      }
      public func clearName() -> Google.Protobuf.Enum.Builder{
           builderResult.hasName = false
           builderResult.name = ""
           return self
      }
      public var enumvalue:Array<Google.Protobuf.EnumValue> {
           get {
               return builderResult.enumvalue
           }
           set (value) {
               builderResult.enumvalue = value
           }
      }
      public func setEnumvalue(value:Array<Google.Protobuf.EnumValue>) -> Google.Protobuf.Enum.Builder {
        self.enumvalue = value
        return self
      }
      public func clearEnumvalue() -> Google.Protobuf.Enum.Builder {
        builderResult.enumvalue.removeAll(keepCapacity: false)
        return self
      }
      public var options:Array<Google.Protobuf.Option> {
           get {
               return builderResult.options
           }
           set (value) {
               builderResult.options = value
           }
      }
      public func setOptions(value:Array<Google.Protobuf.Option>) -> Google.Protobuf.Enum.Builder {
        self.options = value
        return self
      }
      public func clearOptions() -> Google.Protobuf.Enum.Builder {
        builderResult.options.removeAll(keepCapacity: false)
        return self
      }
      public var hasSourceContext:Bool {
           get {
               return builderResult.hasSourceContext
           }
      }
      public var sourceContext:Google.Protobuf.SourceContext! {
           get {
               if sourceContextBuilder_ != nil {
                  builderResult.sourceContext = sourceContextBuilder_.getMessage()
               }
               return builderResult.sourceContext
           }
           set (value) {
               builderResult.hasSourceContext = true
               builderResult.sourceContext = value
           }
      }
      private var sourceContextBuilder_:Google.Protobuf.SourceContext.Builder! {
           didSet {
              builderResult.hasSourceContext = true
           }
      }
      public func getSourceContextBuilder() -> Google.Protobuf.SourceContext.Builder {
        if sourceContextBuilder_ == nil {
           sourceContextBuilder_ = Google.Protobuf.SourceContext.Builder()
           builderResult.sourceContext = sourceContextBuilder_.getMessage()
           if sourceContext != nil {
              try! sourceContextBuilder_.mergeFrom(sourceContext)
           }
        }
        return sourceContextBuilder_
      }
      public func setSourceContext(value:Google.Protobuf.SourceContext!) -> Google.Protobuf.Enum.Builder {
        self.sourceContext = value
        return self
      }
      public func mergeSourceContext(value:Google.Protobuf.SourceContext) throws -> Google.Protobuf.Enum.Builder {
        if builderResult.hasSourceContext {
          builderResult.sourceContext = try Google.Protobuf.SourceContext.builderWithPrototype(builderResult.sourceContext).mergeFrom(value).buildPartial()
        } else {
          builderResult.sourceContext = value
        }
        builderResult.hasSourceContext = true
        return self
      }
      public func clearSourceContext() -> Google.Protobuf.Enum.Builder {
        sourceContextBuilder_ = nil
        builderResult.hasSourceContext = false
        builderResult.sourceContext = nil
        return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Google.Protobuf.Enum.Builder {
        builderResult = Google.Protobuf.Enum()
        return self
      }
      public override func clone() throws -> Google.Protobuf.Enum.Builder {
        return try Google.Protobuf.Enum.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Google.Protobuf.Enum {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Google.Protobuf.Enum {
        let returnMe:Google.Protobuf.Enum = builderResult
        return returnMe
      }
      public func mergeFrom(other:Google.Protobuf.Enum) throws -> Google.Protobuf.Enum.Builder {
        if other == Google.Protobuf.Enum() {
         return self
        }
        if other.hasName {
             name = other.name
        }
        if !other.enumvalue.isEmpty  {
           builderResult.enumvalue += other.enumvalue
        }
        if !other.options.isEmpty  {
           builderResult.options += other.options
        }
        if (other.hasSourceContext) {
            try mergeSourceContext(other.sourceContext)
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Google.Protobuf.Enum.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Enum.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10 :
            name = try input.readString()

          case 18 :
            let subBuilder = Google.Protobuf.EnumValue.Builder()
            try input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
            enumvalue += [subBuilder.buildPartial()]

          case 26 :
            let subBuilder = Google.Protobuf.Option.Builder()
            try input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
            options += [subBuilder.buildPartial()]

          case 34 :
            let subBuilder:Google.Protobuf.SourceContext.Builder = Google.Protobuf.SourceContext.Builder()
            if hasSourceContext {
              try subBuilder.mergeFrom(sourceContext)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            sourceContext = subBuilder.buildPartial()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class EnumValue : GeneratedMessage, GeneratedMessageProtocol {
    public private(set) var hasName:Bool = false
    public private(set) var name:String = ""

    public private(set) var hasNumber:Bool = false
    public private(set) var number:Int32 = Int32(0)

    public private(set) var options:Array<Google.Protobuf.Option>  = Array<Google.Protobuf.Option>()
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasName {
        try output.writeString(1, value:name)
      }
      if hasNumber {
        try output.writeInt32(2, value:number)
      }
      for oneElementoptions in options {
          try output.writeMessage(3, value:oneElementoptions)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasName {
        serialize_size += name.computeStringSize(1)
      }
      if hasNumber {
        serialize_size += number.computeInt32Size(2)
      }
      for oneElementoptions in options {
          serialize_size += oneElementoptions.computeMessageSize(3)
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) throws -> Google.Protobuf.EnumValue {
      return try Google.Protobuf.EnumValue.Builder().mergeFromData(data, extensionRegistry:Google.Protobuf.TypesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.EnumValue {
      return try Google.Protobuf.EnumValue.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Google.Protobuf.EnumValue {
      return try Google.Protobuf.EnumValue.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.EnumValue {
      return try Google.Protobuf.EnumValue.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Google.Protobuf.EnumValue {
      return try Google.Protobuf.EnumValue.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.EnumValue {
      return try Google.Protobuf.EnumValue.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Google.Protobuf.EnumValue.Builder {
      return Google.Protobuf.EnumValue.classBuilder() as! Google.Protobuf.EnumValue.Builder
    }
    public func getBuilder() -> Google.Protobuf.EnumValue.Builder {
      return classBuilder() as! Google.Protobuf.EnumValue.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Google.Protobuf.EnumValue.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Google.Protobuf.EnumValue.Builder()
    }
    public func toBuilder() throws -> Google.Protobuf.EnumValue.Builder {
      return try Google.Protobuf.EnumValue.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Google.Protobuf.EnumValue) throws -> Google.Protobuf.EnumValue.Builder {
      return try Google.Protobuf.EnumValue.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      if hasName {
        output += "\(indent) name: \(name) \n"
      }
      if hasNumber {
        output += "\(indent) number: \(number) \n"
      }
      var optionsElementIndex:Int = 0
      for oneElementoptions in options {
          output += "\(indent) options[\(optionsElementIndex)] {\n"
          try oneElementoptions.writeDescriptionTo(&output, indent:"\(indent)  ")
          output += "\(indent)}\n"
          optionsElementIndex++
      }
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasName {
               hashCode = (hashCode &* 31) &+ name.hashValue
            }
            if hasNumber {
               hashCode = (hashCode &* 31) &+ number.hashValue
            }
            for oneElementoptions in options {
                hashCode = (hashCode &* 31) &+ oneElementoptions.hashValue
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Google.Protobuf.EnumValue"
    }
    override public func className() -> String {
        return "Google.Protobuf.EnumValue"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Google.Protobuf.EnumValue.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Google.Protobuf.EnumValue = Google.Protobuf.EnumValue()
      public func getMessage() -> Google.Protobuf.EnumValue {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      public var hasName:Bool {
           get {
                return builderResult.hasName
           }
      }
      public var name:String {
           get {
                return builderResult.name
           }
           set (value) {
               builderResult.hasName = true
               builderResult.name = value
           }
      }
      public func setName(value:String) -> Google.Protobuf.EnumValue.Builder {
        self.name = value
        return self
      }
      public func clearName() -> Google.Protobuf.EnumValue.Builder{
           builderResult.hasName = false
           builderResult.name = ""
           return self
      }
      public var hasNumber:Bool {
           get {
                return builderResult.hasNumber
           }
      }
      public var number:Int32 {
           get {
                return builderResult.number
           }
           set (value) {
               builderResult.hasNumber = true
               builderResult.number = value
           }
      }
      public func setNumber(value:Int32) -> Google.Protobuf.EnumValue.Builder {
        self.number = value
        return self
      }
      public func clearNumber() -> Google.Protobuf.EnumValue.Builder{
           builderResult.hasNumber = false
           builderResult.number = Int32(0)
           return self
      }
      public var options:Array<Google.Protobuf.Option> {
           get {
               return builderResult.options
           }
           set (value) {
               builderResult.options = value
           }
      }
      public func setOptions(value:Array<Google.Protobuf.Option>) -> Google.Protobuf.EnumValue.Builder {
        self.options = value
        return self
      }
      public func clearOptions() -> Google.Protobuf.EnumValue.Builder {
        builderResult.options.removeAll(keepCapacity: false)
        return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Google.Protobuf.EnumValue.Builder {
        builderResult = Google.Protobuf.EnumValue()
        return self
      }
      public override func clone() throws -> Google.Protobuf.EnumValue.Builder {
        return try Google.Protobuf.EnumValue.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Google.Protobuf.EnumValue {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Google.Protobuf.EnumValue {
        let returnMe:Google.Protobuf.EnumValue = builderResult
        return returnMe
      }
      public func mergeFrom(other:Google.Protobuf.EnumValue) throws -> Google.Protobuf.EnumValue.Builder {
        if other == Google.Protobuf.EnumValue() {
         return self
        }
        if other.hasName {
             name = other.name
        }
        if other.hasNumber {
             number = other.number
        }
        if !other.options.isEmpty  {
           builderResult.options += other.options
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Google.Protobuf.EnumValue.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.EnumValue.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10 :
            name = try input.readString()

          case 16 :
            number = try input.readInt32()

          case 26 :
            let subBuilder = Google.Protobuf.Option.Builder()
            try input.readMessage(subBuilder,extensionRegistry:extensionRegistry)
            options += [subBuilder.buildPartial()]

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

  final public class Option : GeneratedMessage, GeneratedMessageProtocol {
    public private(set) var hasName:Bool = false
    public private(set) var name:String = ""

    public private(set) var hasValue:Bool = false
    public private(set) var value:Google.Protobuf.Any!
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasName {
        try output.writeString(1, value:name)
      }
      if hasValue {
        try output.writeMessage(2, value:value)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasName {
        serialize_size += name.computeStringSize(1)
      }
      if hasValue {
          if let varSizevalue = value?.computeMessageSize(2) {
              serialize_size += varSizevalue
          }
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseFromData(data:NSData) throws -> Google.Protobuf.Option {
      return try Google.Protobuf.Option.Builder().mergeFromData(data, extensionRegistry:Google.Protobuf.TypesRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Option {
      return try Google.Protobuf.Option.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Google.Protobuf.Option {
      return try Google.Protobuf.Option.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Option {
      return try Google.Protobuf.Option.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Google.Protobuf.Option {
      return try Google.Protobuf.Option.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Option {
      return try Google.Protobuf.Option.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Google.Protobuf.Option.Builder {
      return Google.Protobuf.Option.classBuilder() as! Google.Protobuf.Option.Builder
    }
    public func getBuilder() -> Google.Protobuf.Option.Builder {
      return classBuilder() as! Google.Protobuf.Option.Builder
    }
    public override class func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Option.Builder()
    }
    public override func classBuilder() -> MessageBuilder {
      return Google.Protobuf.Option.Builder()
    }
    public func toBuilder() throws -> Google.Protobuf.Option.Builder {
      return try Google.Protobuf.Option.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Google.Protobuf.Option) throws -> Google.Protobuf.Option.Builder {
      return try Google.Protobuf.Option.Builder().mergeFrom(prototype)
    }
    override public func writeDescriptionTo(inout output:String, indent:String) throws {
      if hasName {
        output += "\(indent) name: \(name) \n"
      }
      if hasValue {
        output += "\(indent) value {\n"
        try value?.writeDescriptionTo(&output, indent:"\(indent)  ")
        output += "\(indent) }\n"
      }
      unknownFields.writeDescriptionTo(&output, indent:indent)
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasName {
               hashCode = (hashCode &* 31) &+ name.hashValue
            }
            if hasValue {
                if let hashValuevalue = value?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuevalue
                }
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Google.Protobuf.Option"
    }
    override public func className() -> String {
        return "Google.Protobuf.Option"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Google.Protobuf.Option.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Google.Protobuf.Option = Google.Protobuf.Option()
      public func getMessage() -> Google.Protobuf.Option {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      public var hasName:Bool {
           get {
                return builderResult.hasName
           }
      }
      public var name:String {
           get {
                return builderResult.name
           }
           set (value) {
               builderResult.hasName = true
               builderResult.name = value
           }
      }
      public func setName(value:String) -> Google.Protobuf.Option.Builder {
        self.name = value
        return self
      }
      public func clearName() -> Google.Protobuf.Option.Builder{
           builderResult.hasName = false
           builderResult.name = ""
           return self
      }
      public var hasValue:Bool {
           get {
               return builderResult.hasValue
           }
      }
      public var value:Google.Protobuf.Any! {
           get {
               if valueBuilder_ != nil {
                  builderResult.value = valueBuilder_.getMessage()
               }
               return builderResult.value
           }
           set (value) {
               builderResult.hasValue = true
               builderResult.value = value
           }
      }
      private var valueBuilder_:Google.Protobuf.Any.Builder! {
           didSet {
              builderResult.hasValue = true
           }
      }
      public func getValueBuilder() -> Google.Protobuf.Any.Builder {
        if valueBuilder_ == nil {
           valueBuilder_ = Google.Protobuf.Any.Builder()
           builderResult.value = valueBuilder_.getMessage()
           if value != nil {
              try! valueBuilder_.mergeFrom(value)
           }
        }
        return valueBuilder_
      }
      public func setValue(value:Google.Protobuf.Any!) -> Google.Protobuf.Option.Builder {
        self.value = value
        return self
      }
      public func mergeValue(value:Google.Protobuf.Any) throws -> Google.Protobuf.Option.Builder {
        if builderResult.hasValue {
          builderResult.value = try Google.Protobuf.Any.builderWithPrototype(builderResult.value).mergeFrom(value).buildPartial()
        } else {
          builderResult.value = value
        }
        builderResult.hasValue = true
        return self
      }
      public func clearValue() -> Google.Protobuf.Option.Builder {
        valueBuilder_ = nil
        builderResult.hasValue = false
        builderResult.value = nil
        return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      public override func clear() -> Google.Protobuf.Option.Builder {
        builderResult = Google.Protobuf.Option()
        return self
      }
      public override func clone() throws -> Google.Protobuf.Option.Builder {
        return try Google.Protobuf.Option.builderWithPrototype(builderResult)
      }
      public override func build() throws -> Google.Protobuf.Option {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Google.Protobuf.Option {
        let returnMe:Google.Protobuf.Option = builderResult
        return returnMe
      }
      public func mergeFrom(other:Google.Protobuf.Option) throws -> Google.Protobuf.Option.Builder {
        if other == Google.Protobuf.Option() {
         return self
        }
        if other.hasName {
             name = other.name
        }
        if (other.hasValue) {
            try mergeValue(other.value)
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream) throws -> Google.Protobuf.Option.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      public override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Google.Protobuf.Option.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let tag = try input.readTag()
          switch tag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10 :
            name = try input.readString()

          case 18 :
            let subBuilder:Google.Protobuf.Any.Builder = Google.Protobuf.Any.Builder()
            if hasValue {
              try subBuilder.mergeFrom(value)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            value = subBuilder.buildPartial()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
    }

  }

}

// @@protoc_insertion_point(global_scope)
